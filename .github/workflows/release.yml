name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  release:
    name: Create Release
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Build Packages
        run: |
          make VERSION=${{ env.VERSION }} dmg

      - name: Verify Architecture Support
        run: |
          echo "==> Checking release version architecture compatibility..."
          make check-arch

      - name: Generate Release Notes
        id: release_notes
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Generate GitHub-style release notes using the GitHub CLI
          gh api \
            --method POST \
            -H "Accept: application/vnd.github+json" \
            /repos/${{ github.repository }}/releases/generate-notes \
            -f tag_name='${{ env.VERSION }}' > generated_notes.json
          
          jq -r '.body' generated_notes.json > release_notes.md

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ env.VERSION }}
          body_path: release_notes.md
          draft: false
          prerelease: false
          files: |
            build/MacMusicPlayer-x86_64.dmg
            build/MacMusicPlayer-arm64.dmg
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Trigger Homebrew Update
        if: success()
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.GH_PAT }}
          event-type: trigger-homebrew-update
          client-payload: '{"version": "${{ env.VERSION }}"}'
