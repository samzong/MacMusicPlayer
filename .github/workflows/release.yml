name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    name: Create Release
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable

    - name: Get version from tag
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

    - name: Build and Package
      run: |
        make VERSION=${{ env.VERSION }} dmg

    - name: Generate Release Notes
      id: release_notes
      run: |
        echo "## MacMusicPlayer ${{ env.VERSION }}" > release_notes.md
        echo "" >> release_notes.md
        echo "### Update content" >> release_notes.md
        echo "- Please check the specific submission records for detailed update content." >> release_notes.md

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        name: ${{ env.VERSION }}
        body_path: release_notes.md
        draft: false
        prerelease: false
        files: |
          build/MacMusicPlayer.dmg
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Trigger Homebrew Update
      if: success()  # 只在前面的步骤都成功时才触发
      uses: peter-evans/repository-dispatch@v2
      with:
        token: ${{ secrets.GH_PAT }}
        event-type: trigger-homebrew-update
        client-payload: '{"version": "${{ env.VERSION }}"}'

    - name: Update Latest Tag
      run: |
        git tag -f latest
        git push origin latest --force